import React, {useEffect, useRef} from "react";
import PropTypes from "prop-types";

const CoreBubble = ({size, title}) => {
    const randomNumber = Math.floor(Math.random()*16777215);
    const randomColour = randomNumber.toString(16);

    // const bubbleCanvasRef = useRef(null);
    //
    // useEffect(() => {
    //     const bubbleCanvas = bubbleCanvasRef.current;
    //     const context = bubbleCanvas.getContext("2d");
    //     drawBubble(context);
    // });
    //
    // const drawBubble = (context) => {
    //     // https://css-tricks.com/snippets/javascript/random-hex-color/
    //     const randomNumber = Math.floor(Math.random()*16777215)
    //     const randomColour = randomNumber.toString(16);
    //
    //     console.log(randomNumber)
    //
    //     context.fillStyle = `#${randomColour}`;
    //     context.styles = { border: `1px solid #${randomColour}`}
    //     const centerX = size/2;
    //     const centerY = size/2;
    //     const radius = size/2;
    //     context.arc(centerX, centerY, radius, 0, 7, false);
    //     context.fill();
    //
    //     // https://stackoverflow.com/questions/3697615/how-can-i-write-text-on-a-html5-canvas-element
    //     context.fillStyle = calculateFontColour(randomNumber);
    //     context.textAlign = "center";
    //     context.fillText(title, centerX, centerY);
    // };

    const generateRandomColour = () => {
        const randomNumber = Math.floor(Math.random()*16777215)
        const randomColour = randomNumber.toString(16);
    }

    const calculateFontColour = (randomNumber) => {
        const MAX_INT = 16777215;
        if (randomNumber > (MAX_INT/2) || randomNumber < 100000) {
            return "black";
        }
        return "white";
    }

    return (
        <svg width={size} height={size}>
            <circle cx={size/2} cy={size/2} r={size/3} fill={`#${randomColour}`}/>
            <text x={size/2} y={size/2} text-anchor="middle" fill={calculateFontColour(randomNumber)}>{title}</text>
        </svg>
        // <canvas
        //     ref={bubbleCanvasRef}
        //     width={size}
        //     height={size}
        //     // onMouseOver={} somebullshit animation
        // >
        //     {title}
        // </canvas>
    )
}

CoreBubble.propType = {
    // x: PropTypes.number.isRequired,
    // y: PropTypes.number.isRequired,
    size: PropTypes.number.isRequired,
    title: PropTypes.string.isRequired,
};

export default CoreBubble;